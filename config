dataset = 'COCO'
dataset_root_folder = 'data/coco'
dataset_version = '2014'
lambda_ = 1 # coef of classification loss relative to localization loss
out_folder = 'out'
batch_size = 16
num_epoch = 100000 # total number of epochs
image_size = 300 # image width and height
lr = 0.0004 # initial learning rate
gamma = 0.9 # coef for exp. moving average calculation
mean = [0.485, 0.456, 0.406] # mean of rgb
std = [0.229, 0.224, 0.225] # std of rgb
imbalance_strategy = 'hard_negative_mining'
classes = ['bottle', 'cup', 'wine glass', 'bowl'] # subset of classes to consider
#ar = [1, 2, 3, 1/2, 1/3]
ar = [0.43442604, 4.83296974, 1.63994908, 0.94056121, 9.57486505, 2.7237517] # aspect ratios of anchor boxes
scales = [0.15, 0.3 , 0.45, 0.6 , 0.75, 0.9] # scales for anchor boxes
aspect_ratios = [ar] * 6
num_workers = 8 # num of workers for loading data
data_augmentation_params = {
    'patch_proba': 0.5,
    'min_scale': 0.1, # minimum patch width
    'max_scale': 1, # maximum patch width
    'min_aspect_ratio': 0.5, # min patch aspect ratio
    'max_aspect_ratio': 2, # max patch aspect ratio
    'nb_trials': 50, # nb of trials for patch sampling until we find a patch with at least one bbox
    'flip_proba': 0.5, # proba of flipping
}
train_evaluation_size = 1000
val_evaluation_size = 1000
k = 1000
lr_schedule = [
    {'iter': (0,    30*k),  'lr': 0.0004},
    {'iter': (30*k, 50*k),  'lr': 0.00004},
    {'iter': (50*k, 100*k), 'lr': 0.000004},
]
log_interval = 100
# IOU thresholds
eval_topk = 100
eval_iou_threshold = 0.5
bbox_encoding_iou_threshold = 0.5 # iou threshold used to match true bboxes to anchor boxes
nms_iou_threshold = 0.45 # iou threshold used in non maximal suppression
score_threshold = 0.4 # score threshold when doing non maximal suppression
